---
apiVersion: "tekton.dev/v1beta1"
kind: "PipelineRun"
metadata:
  annotations:
    pipelinesascode.tekton.dev/task: "git-clone"
    pipelinesascode.tekton.dev/on-event: "[pull_request, push]"
    pipelinesascode.tekton.dev/on-target-branch: "[donnerstag*]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
  name: "git-demo-microservice"
spec:
  taskRunSpecs:
    - pipelineTaskName: fetch-source # ...your git-clone PipelineTask name...
      taskPodTemplate:
        securityContext:
          runAsNonRoot: true
          runAsUser: 65532
          fsGroup: 65532
    - pipelineTaskName: maven-build # ...your git-clone PipelineTask name...
      taskPodTemplate:
        securityContext:
          runAsNonRoot: true
          runAsUser: 65532
          fsGroup: 65532
    - pipelineTaskName: image-build # ...your git-clone PipelineTask name...
      taskServiceAccountName: pipelines-sa-userid-1000

  pipelineSpec:
    workspaces:
      - name: code
    tasks:
      - name: fetch-source
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: code
        params:
          - name: url
            value: {{repo_url}}

      - name: maven-build
        runAfter:
          - fetch-source
        taskRef:
          name: custom-task
        workspaces:
          - name: input
            workspace: code
          - name: cache
            workspace: maven-cache
          - name: sonar-cache
            workspace: sonar-cache
        params:
          - name: repo
            value: {{repo_name}}
          - name: branch
            value: {{source_branch}}
          - name: maven-version
            value: 0.1.5
      - name: image-build
        runAfter:
          - maven-build
        taskRef:
          resolver: cluster
          params:
            - name: kind
              value: task
            - name: name
              value: buildah-as-user
            - name: namespace
              value: tekton-demo-microservice-cicd
        workspaces:
          - name: code
            workspace: code
          - name: ghcr-pat
            workspace: ghcr-pat
      - name: image-scan
        runAfter:
          - image-build
        taskRef:
          resolver: cluster
          params:
            - name: kind
              value: task
            - name: name
              value: scan-image-trivy
            - name: namespace
              value: tekton-demo-microservice-cicd
        workspaces:
          - name: workspace
            workspace: code
          - name: ghcr-pat
            workspace: ghcr-pat
          - name: cache
            workspace: trivy-cache

  workspaces:
    - name: code
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 300Mi
          volumeMode: Filesystem
    - name: maven-cache
      persistentVolumeClaim:
        claimName: maven-cache
    - name: sonar-cache
      persistentVolumeClaim:
        claimName: sonar-cache
    - name: ghcr-pat
      secret:
        secretName: ghcr-pat
    - name: trivy-cache
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
          volumeMode: Filesystem
